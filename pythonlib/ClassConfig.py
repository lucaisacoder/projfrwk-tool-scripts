#!/usr/bin/env python
#-*- coding = utf-8 -*-
import os
from ClassPrint import *

PRT = ClassPrint()

class ClassConfig:
    config_content_old = ""
    config_content = ""
    update_config = False
    def __init__(self, project_path, config_filename, toolchain, toolchain_prefix):
        PRT.debug("%s\%s\%s\%s"%(project_path, config_filename, toolchain, toolchain_prefix))
        self.config_path = project_path
        self.config_path = self.config_path.strip().replace("\\","/")
        self.config_filename = os.path.join(self.config_path, "/", config_filename)
        self.config_filename = self.config_filename.strip().replace("\\","/")
        if os.path.exists(self.config_filename):
            with open(self.config_filename) as f:
                self.config_content_old = f.read()
        self.toolchain = toolchain
        self.toolchain_prefix = toolchain_prefix

    def update(self):
        self.config_content = "# This file is automatically generated by the script, please do not modify the content!\n\n"
        if self.toolchain.strip() != "":
            if not os.path.exists(self.toolchain):
                PRT.error("invalid toolchain path", self.toolchain)
                exit(1)
            self.update_config = True
            self.config_content += 'CONFIG_TOOLCHAIN_PATH="'+ self.toolchain.strip().replace("\\","/") +'"\n'
        if self.toolchain_prefix.strip() != "":
            self.update_config = True
            self.config_content += 'CONFIG_TOOLCHAIN_PREFIX="' + self.toolchain_prefix.strip().replace("\\","/") + '"\n'
        self.config_content += '\n'

    def write(self):
        self.update()
        if self.update_config and self.config_content != self.config_content_old:
            with open(self.config_filename, "w") as f:
                f.write(self.config_content)
            if os.path.exists(os.path.join(self.config_path, "/build/global_config.mk")):
                os.remove(os.path.join(self.config_path, "/build/global_config.mk"))
            PRT.Complete("generate config file at {}".format(self.config_filename))
